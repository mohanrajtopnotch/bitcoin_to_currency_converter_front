{"version":3,"sources":["Zustand/CurrencyStore.js","components/webviews/ChartView.js","components/webviews/ConverterView.js","router/Router.js","App.js","reportWebVitals.js","index.js"],"names":["CurrencyStore","create","set","currencyType","SetCurrencyType","param","state","Page","useState","dataFetch","setDataFetech","CallAxios","a","axios","get","response","data","bpi","console","log","useEffect","then","config","Object","keys","map","item","Date","Value","padding","xField","yField","annotations","type","start","end","color","position","offsetY","style","textBaseline","stroke","lineDash","Option","Select","Title","Typography","ConverterView","USD","rate","GBP","EUR","textAlign","level","marginTop","border","span","xs","xl","opacity","defaultValue","width","onChange","value","height","Router","to","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db58007e.chunk.js","sourcesContent":["import create  from 'zustand'\r\n const CurrencyStore = create(set =>({\r\n        currencyType:\"USD\",\r\n        SetCurrencyType: \r\n        (param) => set(state => ({currencyType:param}))\r\n    })\r\n);\r\nexport default CurrencyStore;","import React, { useEffect, useState } from \"react\";\r\nimport CurrencyStore from \"../../Zustand/CurrencyStore\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from \"axios\";\r\nconst Page = () => {\r\n  const [dataFetch, setDataFetech] = useState(\"\");\r\n  const currencyType = CurrencyStore((state) => state.currencyType);\r\n  const CallAxios = async () => {\r\n    try {\r\n      let response = await axios.get(\r\n        `https://api.coindesk.com/v1/bpi/historical/close.json?currency=${currencyType}&start=100`\r\n      );\r\n      return response.data.bpi;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return err;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    CallAxios().then((data) => {\r\n      setDataFetech(data);\r\n    });\r\n  }, [dataFetch]);\r\n\r\n  var r = Object.keys(dataFetch).map((item) => ({\r\n    Date: item,\r\n    Value: dataFetch[item],\r\n  }));\r\n  // console.log(r);\r\n  const data = r;\r\n\r\n  var config = {\r\n    data: data,\r\n    padding: \"auto\",\r\n    xField: \"Date\",\r\n    yField: \"Value\",\r\n    annotations: [\r\n      {\r\n        type: \"regionFilter\",\r\n        start: [\"min\", \"median\"],\r\n        end: [\"max\", \"0\"],\r\n        color: \"#F4664A\",\r\n      },\r\n      {\r\n        type: \"text\",\r\n        position: [\"min\", \"median\"],\r\n        offsetY: -4,\r\n        style: { textBaseline: \"bottom\" },\r\n      },\r\n      {\r\n        type: \"line\",\r\n        start: [\"min\", \"median\"],\r\n        end: [\"max\", \"median\"],\r\n        style: {\r\n          stroke: \"#F4664A\",\r\n          lineDash: [2, 2],\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return <Line {...config} />;\r\n};\r\nexport default Page;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Select, Typography, Card, Row, Col } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport Page from \"./ChartView\";\r\nimport  CurrencyStore  from \"../../Zustand/CurrencyStore\";\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\nexport default function ConverterView() {\r\n  const [dataFetch, setDataFetech] = useState(\"\");\r\n  // const [currencyType, setCurrencyType] = useState(\"USD\");\r\n  const currencyType = CurrencyStore((state) => state.currencyType);\r\n  const SetCurrencyType = CurrencyStore((state) => state.SetCurrencyType);\r\n  const CallAxios = async () => {\r\n    try {\r\n      let response = await axios.get(\r\n        `https://api.coindesk.com/v1/bpi/currentprice.json`\r\n      );\r\n      console.log(response.data.bpi);\r\n      return response.data.bpi;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return err;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    CallAxios().then((data) => {\r\n      if (currencyType === \"USD\") {\r\n        setDataFetech(data.USD.rate);\r\n      }\r\n      if (currencyType === \"GBP\") {\r\n        setDataFetech(data.GBP.rate);\r\n      }\r\n      if (currencyType === \"EUR\") {\r\n        setDataFetech(data.EUR.rate);\r\n      }\r\n    });\r\n  });\r\n\r\n  function handleChange(value) {\r\n    SetCurrencyType(value);\r\n    console.log(`selected ${value}`);\r\n  }\r\n  return (\r\n    <>\r\n    <Title style={{ textAlign:'center' }} level={6}>\r\n             Currency Converter\r\n            </Title>\r\n      <div style={{ padding: \"10px\", marginTop: \"1.5%\" }}>\r\n        <Row style={{ border: \"1px solid red\", padding: \"12px\" }}>\r\n          <Col\r\n            span={24}\r\n            xs={24}\r\n            xl={12}\r\n            style={{ textAlign: \"center\", marginTop: \"12%\" }}\r\n          >\r\n            <Title style={{ opacity: 0.6, padding: \"10px\" }} level={4}>\r\n              1 BitCoin Equals\r\n            </Title>\r\n            <Select\r\n              defaultValue=\"United States Dollar (USD)\"\r\n              style={{ width: \"300px\", padding: \"10px\" }}\r\n              onChange={handleChange}\r\n            >\r\n              <Option value=\"USD\">United States Dollar (USD)</Option>\r\n              <Option value=\"GBP\">British Pound Sterling (GBP)</Option>\r\n              <Option value=\"EUR\">Euro (EUR)</Option>\r\n            </Select>\r\n            <Title level={4} style={{ padding: \"10px\" }}>\r\n              {dataFetch}\r\n            </Title>\r\n          </Col>\r\n\r\n          <Col span={24} xs={24} xl={12} style={{ textAlign: \"center\" }}>\r\n            <Title style={{ opacity: 0.6 }} level={4}>\r\n              Last 60 Days Trend\r\n            </Title>\r\n            <Card style={{ height: \"450px\" }}>\r\n              <Page />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import  { Route , Switch } from 'react-router-dom'\r\nimport React from 'react'\r\nimport ConverterView from '../components/webviews/ConverterView.js'\r\nexport default function Router() {\r\n    return (\r\n        <Switch>\r\n            <Route to=\"/\" component={ConverterView} />\r\n        </Switch>\r\n    )\r\n}\r\n","import { Switch } from \"react-router\";\nimport Router from \"./router/Router\";\nexport default function App() {\n  return (\n    <Switch>\n      <Router/>\n    </Switch>\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}